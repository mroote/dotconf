# based on https://github.com/gf3/dotfiles

default_username='unknown'
OSNAME=""
PROMPTCHAR="\$"

if tput setaf 1 &> /dev/null; then
  tput sgr0
  if [[ $(tput colors) -ge 256 ]] 2>/dev/null; then
    BLUE=$(tput setaf 4)
    MAGENTA=$(tput setaf 9)
    ORANGE=$(tput setaf 172)
    GREEN=$(tput setaf 70)
    PURPLE=$(tput setaf 141)
  else
    BLUE=$(tput setaf 4)
    MAGENTA=$(tput setaf 5)
    ORANGE=$(tput setaf 3)
    GREEN=$(tput setaf 2)
    PURPLE=$(tput setaf 1)

  fi
  BOLD=$(tput bold)
  RESET=$(tput sgr0)
  else
    BLUE="\033[1;34m"
    MAGENTA="\033[1;31m"
    ORANGE="\033[1;33m"
    GREEN="\033[1;32m"
    PURPLE="\033[1;35m"
    BOLD=""
    RESET="\033[m"
  fi

function git_info() {
  # check if we're in a git repo
  git rev-parse --is-inside-work-tree &>/dev/null || return

  # quickest check for what branch we're on
  branch=$(git symbolic-ref -q HEAD | sed -e 's|^refs/heads/||')

  # check if it's dirty (via github.com/sindresorhus/pure)
  dirty=$(git diff --quiet --ignore-submodules HEAD &>/dev/null; [ $? -eq 1 ] && echo -e "*")

  echo $RESET$BOLD" on "$PURPLE$branch$dirty
}

# Only show username/host if not default
function usernamehost() {
  if [ $USER != $default_username ]; then
    echo "${BLUE}${OSNAME}${BLUE}$USER${BOLD}${RESET}@${BLUE}$HOSTNAME${RESET}${BOLD} in ";
  else
    echo "${BLUE}${OSNAME}";
  fi
}

PS1="\[\e]2;$PWD\[\a\]\[\e]1;\]$(basename "$(dirname "$PWD")")/\W\[\a\]\$(usernamehost)\[$BLUE\]\w\$(git_info)\[$RESET\]\[$BOLD\]\n${PROMPTCHAR} \[$RESET\]"
